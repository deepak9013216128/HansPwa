{"version":3,"sources":["./src/app/chat-service.service.ts"],"names":[],"mappings":"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","file":"default~chat-chat-module~compatibility-form-compatibility-form-module-es2015.js","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { timeout, retry, catchError, tap, shareReplay } from 'rxjs/operators';\r\nimport { FindOpenHistoryProfileService } from './find-open-history-profile.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ProfileTable } from './Model/Profile';\r\nimport { RishteyCountTable } from './Model/RishteyCountTable';\r\nimport { NgxNotificationService } from 'ngx-kc-notification';\r\nimport { StateTable } from './Model/StateTable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatServiceService {\r\n\r\n  constructor(public http: HttpClient,\r\n              public itemService: FindOpenHistoryProfileService,\r\n              private ngxNotificationService: NgxNotificationService) { }\r\n\r\n get activeTab(): number {\r\n  return this.currentTab;\r\n }\r\n  authDataUpdated = new EventEmitter<boolean>();\r\n  profileItem;\r\n  contactNumber;\r\n  loginStatus;\r\n  credits;\r\n  shortList = [];\r\n  rejectList = [];\r\n  actionCount = -2;\r\n  personalProfileData: any;\r\n  familyProfileData: any;\r\n  preferenceProfileData: any;\r\n  pageThreeFilled = true;\r\n  authorized = new EventEmitter<{\r\n    name,\r\n    photo,\r\n    id,\r\n    isLead\r\n  }>();\r\n\r\n  currentTab = 0;\r\n\r\n  shouldHitSendMessages = new BehaviorSubject<boolean>(false);\r\n  shouldHitSendMessages$: Observable<boolean> = this.shouldHitSendMessages.asObservable();\r\n\r\n  opensidenav = new BehaviorSubject<boolean>(false);\r\n  opensidenav$: Observable<boolean> = this.opensidenav.asObservable();\r\n\r\n  imgSRC = new BehaviorSubject<string>(null);\r\n  imgSRC$: Observable<string> = this.imgSRC.asObservable();\r\n  formTwoCompleted = new BehaviorSubject<boolean>(false);\r\n  countOfRishtey = 0;\r\n  // for user profile\r\n  private userProfileSubject = new BehaviorSubject<ProfileTable>(null);\r\n  private userProfile$: Observable<ProfileTable> = this.userProfileSubject.asObservable().pipe(shareReplay());\r\n\r\n  // for all caste\r\n  private allCastesSubject = new BehaviorSubject<string[]>(null);\r\n  private allCastes$: Observable<string[]> = this.allCastesSubject.asObservable().pipe(shareReplay());\r\n\r\n  // get states according to country\r\n  private allStatesSubject = new BehaviorSubject<StateTable[]>(null);\r\n  private allStates$: Observable<StateTable[]> = this.allStatesSubject.asObservable().pipe(shareReplay());\r\n\r\n  // get cities on the basis of country and states\r\n  private allCitiesSubject = new BehaviorSubject<string[]>(null);\r\n  private allCities$: Observable<string[]> = this.allCitiesSubject.asObservable().pipe(shareReplay());\r\n\r\n   // get count of rishtas\r\n   private countOfRishtas: string;\r\n   private countOfRishtasSubject = new BehaviorSubject<RishteyCountTable>(null);\r\n   private countOfRishtas$: Observable<RishteyCountTable> = this.countOfRishtasSubject.asObservable().pipe(shareReplay());\r\n\r\n  selected_country: any;\r\n  selected_states = '';\r\n  selected_cities = '';\r\n  selected_states_id: string[] = [];\r\n  familyDetailsLeft: any[] = [];\r\n  personalDetailsLeft: any[] = [];\r\n  profileCompletionPercent = 0;\r\n  personalDetailsList = [];\r\n  familyDetailsList = [];\r\n  totalDetails = 0;\r\n  setProfileData(a: any, b: any) {\r\n    this.personalProfileData = a;\r\n    this.familyProfileData = b;\r\n  }\r\n  setContactNumber(contact: any) {\r\n    this.contactNumber = contact;\r\n  }\r\n  setSharedProfile(profile: any) {\r\n    this.profileItem = profile;\r\n  }\r\n  getSharedProfile() {\r\n    return this.profileItem;\r\n  }\r\n  getContactNumber() {\r\n    return this.contactNumber ? this.contactNumber : localStorage.getItem('mobile_number');\r\n  }\r\n  Analytics(type: string, category: string, action: string) {\r\n    (window as any).ga('send', 'event', category, action, {\r\n      hitCallback: () => {\r\n\r\n        console.log('Tracking ' + type + ' successful');\r\n      }\r\n\r\n    });\r\n    // gtag app + web\r\n    (window as any).gtag('event', category, {\r\n      action: action\r\n    });\r\n\r\n  }\r\n  setLoginStatus(status: boolean) {\r\n    this.loginStatus = status;\r\n  }\r\n  getLoginStatus() {\r\n    return this.loginStatus;\r\n  }\r\n\r\n  changeCurrentTab(tab: number) {\r\n    if (tab && tab > -1) {\r\n      this.currentTab = tab;\r\n    }\r\n\r\n  }\r\n\r\n  setCredits(credits: string) {\r\n    this.credits = credits;\r\n  }\r\n  getCredits() {\r\n    return this.credits;\r\n  }\r\n\r\n  get allCastes(): Observable<string[]> {\r\n    if (this.allCastesSubject.getValue()) {\r\n      return this.allCastes$;\r\n    }\r\n    return this.http.get<string[]>('https://partner.hansmatrimony.com/api/getAllCaste').pipe(\r\n      tap((data: string[]) => {\r\n          this.allCastesSubject.next(data);\r\n      }));\r\n  }\r\n\r\n  getStates(value): Observable<StateTable[]> {\r\n    if (this.allStatesSubject.getValue() || value === this.selected_country) {\r\n      console.log('cached states');\r\n      return this.allStates$;\r\n    }\r\n    this.selected_country = value;\r\n    const params = new HttpParams().set('country_id', this.selected_country ? this.selected_country.id : null);\r\n    return this.http.get<StateTable[]>('https://partner.hansmatrimony.com/api/getState', { params }).pipe(\r\n      tap((data: StateTable[]) => {\r\n        this.allStatesSubject.next(data);\r\n      })\r\n    );\r\n }\r\n\r\n getCities(countryValue, stateValue): Observable<string[]> {\r\n  if (this.allCitiesSubject.getValue() || countryValue === this.selected_country\r\n  && stateValue === this.selected_states) {\r\n    console.log('cached states');\r\n    return this.allCities$;\r\n  }\r\n  this.selected_country = countryValue;\r\n  this.selected_states = stateValue;\r\n  const params = new HttpParams().set('country_id', this.selected_country).set('state_id', stateValue);\r\n  return this.http.get<string[]>('https://partner.hansmatrimony.com/api/getCity', { params }).pipe(\r\n    tap((data: string[]) => {\r\n      this.allCitiesSubject.next(data);\r\n    })\r\n  );\r\n}\r\n\r\ngetCountOfRishtey(formValues: FormData, values: any): Observable<RishteyCountTable> {\r\n  if (this.countOfRishtasSubject.getValue() && this.countOfRishtas === JSON.stringify(values) ) {\r\n    console.log('cached count of rishtey' , this.countOfRishtas === JSON.stringify(values));\r\n    return this.countOfRishtas$;\r\n  }\r\n  this.countOfRishtas = JSON.stringify(values);\r\n  return this.http.post<RishteyCountTable>('https://partner.hansmatrimony.com/api/getCountOfRishtey', formValues).pipe(\r\n    tap((data: RishteyCountTable) => {\r\n      this.countOfRishtasSubject.next(data);\r\n    })\r\n  );\r\n}\r\n\r\n  setProfileCalculations() {\r\n    this.personalDetailsList = ['name', 'birth_date', 'birth_time', 'birth_place', 'college',\r\n      'additional_qualification', 'caste', 'religion',\r\n      'height', 'weight', 'marital_status', 'manglik',\r\n      'food_choice', 'monthly_income', 'degree',\r\n      'company', 'occupation', 'profession', 'working_city',\r\n      'locality', 'email', 'profession', 'locality', 'whats_app_no'];\r\n    this.familyDetailsList = ['about', 'occupation_mother', 'gotra', 'occupation',\r\n      'family_type', 'family_income', 'city', 'house_type', 'livingWithParents'];\r\n    this.totalDetails = this.personalDetailsList.length + this.familyDetailsList.length;\r\n    this.personalDetailsLeft = [];\r\n    this.familyDetailsLeft = [];\r\n    for (const v of this.personalDetailsList) {\r\n      if (this.personalProfileData.hasOwnProperty(v)) {\r\n        if (!this.personalProfileData[v] || this.personalProfileData[v] === 'null') {\r\n          this.personalDetailsLeft.push(v);\r\n        }\r\n      } else { this.personalDetailsLeft.push(v); }\r\n    }\r\n    for (const v of this.familyDetailsList) {\r\n      if (this.familyProfileData.hasOwnProperty(v)) {\r\n        if (!this.familyProfileData[v] || this.familyProfileData[v] === 'null') {\r\n          this.familyDetailsLeft.push(v);\r\n        }\r\n      } else {\r\n        this.familyDetailsLeft.push(v);\r\n      }\r\n    }\r\n    for (const v of this.personalDetailsLeft) {\r\n      if (this.familyProfileData.hasOwnProperty(v)) {\r\n        this.personalDetailsLeft.splice(this.personalDetailsLeft.indexOf(v));\r\n      }\r\n    }\r\n    console.log(this.personalDetailsLeft);\r\n    console.log(this.familyDetailsLeft);\r\n  }\r\n  setProfileCompletion() {\r\n    this.profileCompletionPercent = Math.ceil(((this.totalDetails - this.personalDetailsLeft.length - this.familyDetailsLeft.length) * 100) / (this.totalDetails));\r\n    localStorage.setItem('profileCompPercent', String(this.profileCompletionPercent));\r\n    console.log('profile completion percent set from chat service');\r\n  }\r\n  getUserProfileData() {\r\n    if (localStorage.getItem('id')) {\r\n      const myprofileData = new FormData();\r\n      myprofileData.append(\r\n        'id', localStorage.getItem('id')\r\n      );\r\n      myprofileData.append('contacted', '1');\r\n      myprofileData.append(\r\n        'is_lead', localStorage.getItem('is_lead')\r\n      );\r\n      // tslint:disable-next-line: max-line-length\r\n      return this.http\r\n        .post<any>(\r\n          'https://partner.hansmatrimony.com/api/getProfile',\r\n          myprofileData\r\n        )\r\n        .pipe(\r\n          timeout(7000),\r\n          retry(2),\r\n          catchError((e) => {\r\n            throw new Error('Server Timeout ' + e);\r\n          })\r\n        )\r\n        .subscribe(\r\n          (data: any) => {\r\n            console.log(data.preferences);\r\n            this.preferenceProfileData = data.preferences ? data.preferences : null;\r\n            this.personalProfileData = data.profile ? data.profile : null;\r\n            this.familyProfileData = data.family ? data.family : null;\r\n\r\n            // setting profile data in chat service for use in popups.\r\n            this.setProfileData(this.personalProfileData, this.familyProfileData);\r\n            this.setProfileCalculations();\r\n            this.setProfileCompletion();\r\n            if (data.profile.photo) {\r\n              this.itemService.setPhotoStatus(true);\r\n            }\r\n          },\r\n          (error: any) => {\r\n            console.log(error);\r\n          }\r\n        );\r\n    } else {\r\n      console.log('Couln\\'t get profiledata');\r\n    }\r\n  }\r\n  setShouldHitSendMessagesToTrue() {\r\n    this.shouldHitSendMessages.next(true);\r\n  }\r\n  setShouldHitSendMessagesToFalse() {\r\n    this.shouldHitSendMessages.next(false);\r\n  }\r\n  opensidenavTrue() {\r\n    this.opensidenav.next(true);\r\n  }\r\n  opensidenavFalse() {\r\n    this.opensidenav.next(false);\r\n  }\r\n\r\n  setUserProfile(data: ProfileTable) {\r\n    if (data) {\r\n      this.userProfileSubject.next(data);\r\n    }\r\n  }\r\n\r\n  // getProfile Observable\r\n  getUserProfile( updateProfile: boolean = false): Observable<ProfileTable> {\r\n    if (this.userProfileSubject.getValue() && !updateProfile) {\r\n      console.log('cached user profile', this.userProfileSubject.getValue());\r\n\r\n      return this.userProfileSubject;\r\n    }\r\n    const myprofileData = new FormData();\r\n    myprofileData.append(\r\n      'id', localStorage.getItem('id')\r\n    );\r\n    myprofileData.append('contacted', '1');\r\n    myprofileData.append(\r\n      'is_lead', localStorage.getItem('is_lead')\r\n    );\r\n    myprofileData.append('show_country', '1');\r\n    return this.http\r\n      .post<ProfileTable>(\r\n        'https://partner.hansmatrimony.com/api/getProfile',\r\n        myprofileData\r\n      )\r\n      .pipe(\r\n        timeout(7000),\r\n        retry(2),\r\n        catchError((e) => {\r\n          this.ngxNotificationService.error(\r\n            'Server Time Out, Try Again Later'\r\n          );\r\n          throw new Error('Server Timeout ' + e);\r\n        }\r\n        ), tap((data) => {\r\n          console.log('User Data Updated');\r\n          this.userProfileSubject.next(data);\r\n        })\r\n      );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}
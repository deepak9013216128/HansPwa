{"version":3,"sources":["src/app/chat-service.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,QAAa,kBAAb;AAEE,kCAAmB,IAAnB,EACmB,WADnB,EAEoB,sBAFpB,EAEkE;AAAA;;AAF/C,aAAA,IAAA,GAAA,IAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACC,aAAA,sBAAA,GAAA,sBAAA;AAKpB,aAAA,eAAA,GAAkB,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAlB;AAKA,aAAA,SAAA,GAAY,EAAZ;AACA,aAAA,UAAA,GAAa,EAAb;AACA,aAAA,WAAA,GAAc,CAAC,CAAf;AAIA,aAAA,eAAA,GAAkB,IAAlB;AACA,aAAA,UAAA,GAAa,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAb;AAOA,aAAA,UAAA,GAAa,CAAb;AAEA,aAAA,qBAAA,GAAwB,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAA6B,KAA7B,CAAxB;AACA,aAAA,sBAAA,GAA8C,KAAK,qBAAL,CAA2B,YAA3B,EAA9C;AAEA,aAAA,WAAA,GAAc,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAA6B,KAA7B,CAAd;AACA,aAAA,YAAA,GAAoC,KAAK,WAAL,CAAiB,YAAjB,EAApC;AAEA,aAAA,MAAA,GAAS,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAA4B,IAA5B,CAAT;AACA,aAAA,OAAA,GAA8B,KAAK,MAAL,CAAY,YAAZ,EAA9B;AACA,aAAA,gBAAA,GAAmB,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAA6B,KAA7B,CAAnB;AACA,aAAA,cAAA,GAAiB,CAAjB,CAnCkE,CAoClE;;AACQ,aAAA,kBAAA,GAAqB,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAkC,IAAlC,CAArB;AACA,aAAA,YAAA,GAAyC,KAAK,kBAAL,CAAwB,YAAxB,GAAuC,IAAvC,CAA4C,MAAA,CAAA,2CAAA,CAAA,aAAA,CAAA,CAAA,EAA5C,CAAzC,CAtC0D,CAwClE;;AACQ,aAAA,gBAAA,GAAmB,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAA8B,IAA9B,CAAnB;AACA,aAAA,UAAA,GAAmC,KAAK,gBAAL,CAAsB,YAAtB,GAAqC,IAArC,CAA0C,MAAA,CAAA,2CAAA,CAAA,aAAA,CAAA,CAAA,EAA1C,CAAnC,CA1C0D,CA4ClE;;AACQ,aAAA,gBAAA,GAAmB,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAkC,IAAlC,CAAnB;AACA,aAAA,UAAA,GAAuC,KAAK,gBAAL,CAAsB,YAAtB,GAAqC,IAArC,CAA0C,MAAA,CAAA,2CAAA,CAAA,aAAA,CAAA,CAAA,EAA1C,CAAvC,CA9C0D,CAgDlE;;AACQ,aAAA,gBAAA,GAAmB,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAA8B,IAA9B,CAAnB;AACA,aAAA,UAAA,GAAmC,KAAK,gBAAL,CAAsB,YAAtB,GAAqC,IAArC,CAA0C,MAAA,CAAA,2CAAA,CAAA,aAAA,CAAA,CAAA,EAA1C,CAAnC;AAIC,aAAA,qBAAA,GAAwB,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAuC,IAAvC,CAAxB;AACA,aAAA,eAAA,GAAiD,KAAK,qBAAL,CAA2B,YAA3B,GAA0C,IAA1C,CAA+C,MAAA,CAAA,2CAAA,CAAA,aAAA,CAAA,CAAA,EAA/C,CAAjD;AAGT,aAAA,eAAA,GAAkB,EAAlB;AACA,aAAA,eAAA,GAAkB,EAAlB;AACA,aAAA,kBAAA,GAA+B,EAA/B;AACA,aAAA,iBAAA,GAA2B,EAA3B;AACA,aAAA,mBAAA,GAA6B,EAA7B;AACA,aAAA,wBAAA,GAA2B,CAA3B;AACA,aAAA,mBAAA,GAAsB,EAAtB;AACA,aAAA,iBAAA,GAAoB,EAApB;AACA,aAAA,YAAA,GAAe,CAAf;AAlEuE;;AAJzE;AAAA;AAAA,uCAuEiB,CAvEjB,EAuEyB,CAvEzB,EAuE+B;AAC3B,eAAK,mBAAL,GAA2B,CAA3B;AACA,eAAK,iBAAL,GAAyB,CAAzB;AACD;AA1EH;AAAA;AAAA,yCA2EmB,OA3EnB,EA2E+B;AAC3B,eAAK,aAAL,GAAqB,OAArB;AACD;AA7EH;AAAA;AAAA,yCA8EmB,OA9EnB,EA8E+B;AAC3B,eAAK,WAAL,GAAmB,OAAnB;AACD;AAhFH;AAAA;AAAA,2CAiFkB;AACd,iBAAO,KAAK,WAAZ;AACD;AAnFH;AAAA;AAAA,2CAoFkB;AACd,iBAAO,KAAK,aAAL,GAAqB,KAAK,aAA1B,GAA0C,YAAY,CAAC,OAAb,CAAqB,eAArB,CAAjD;AACD;AAtFH;AAAA;AAAA,kCAuFY,IAvFZ,EAuF0B,QAvF1B,EAuF4C,MAvF5C,EAuF0D;AACrD,UAAA,MAAc,CAAC,EAAf,CAAkB,MAAlB,EAA0B,OAA1B,EAAmC,QAAnC,EAA6C,MAA7C,EAAqD;AACpD,YAAA,WAAW,EAAE,uBAAK;AAEhB,cAAA,OAAO,CAAC,GAAR,CAAY,cAAc,IAAd,GAAqB,aAAjC;AACD;AAJmD,WAArD,EADqD,CAQtD;;AACC,UAAA,MAAc,CAAC,IAAf,CAAoB,OAApB,EAA6B,QAA7B,EAAuC;AACtC,YAAA,MAAM,EAAE;AAD8B,WAAvC;AAIF;AApGH;AAAA;AAAA,uCAqGiB,MArGjB,EAqGgC;AAC5B,eAAK,WAAL,GAAmB,MAAnB;AACD;AAvGH;AAAA;AAAA,yCAwGgB;AACZ,iBAAO,KAAK,WAAZ;AACD;AA1GH;AAAA;AAAA,yCA4GmB,GA5GnB,EA4G8B;AAC1B,cAAI,GAAG,IAAI,GAAG,GAAG,CAAC,CAAlB,EAAqB;AACnB,iBAAK,UAAL,GAAkB,GAAlB;AACD;AAEF;AAjHH;AAAA;AAAA,mCAmHa,OAnHb,EAmH4B;AACxB,eAAK,OAAL,GAAe,OAAf;AACD;AArHH;AAAA;AAAA,qCAsHY;AACR,iBAAO,KAAK,OAAZ;AACD;AAxHH;AAAA;AAAA,kCAoIY,KApIZ,EAoIiB;AAAA;;AACb,cAAI,KAAK,gBAAL,CAAsB,QAAtB,MAAoC,KAAK,KAAK,KAAK,gBAAvD,EAAyE;AACvE,YAAA,OAAO,CAAC,GAAR,CAAY,eAAZ;AACA,mBAAO,KAAK,UAAZ;AACD;;AACD,eAAK,gBAAL,GAAwB,KAAxB;AACA,cAAM,MAAM,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,YAArB,EAAmC,KAAK,gBAAL,GAAwB,KAAK,gBAAL,CAAsB,EAA9C,GAAmD,IAAtF,CAAf;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA4B,gDAA5B,EAA8E;AAAE,YAAA,MAAM,EAAN;AAAF,WAA9E,EAA0F,IAA1F,CACL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAC,IAAD,EAAuB;AACzB,YAAA,KAAI,CAAC,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B;AACD,WAFD,CADK,CAAP;AAKF;AAhJF;AAAA;AAAA,kCAkJW,YAlJX,EAkJyB,UAlJzB,EAkJmC;AAAA;;AACjC,cAAI,KAAK,gBAAL,CAAsB,QAAtB,MAAoC,YAAY,KAAK,KAAK,gBAAtB,IACrC,UAAU,KAAK,KAAK,eADvB,EACwC;AACtC,YAAA,OAAO,CAAC,GAAR,CAAY,eAAZ;AACA,mBAAO,KAAK,UAAZ;AACD;;AACD,eAAK,gBAAL,GAAwB,YAAxB;AACA,eAAK,eAAL,GAAuB,UAAvB;AACA,cAAM,MAAM,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,YAArB,EAAmC,KAAK,gBAAxC,EAA0D,GAA1D,CAA8D,UAA9D,EAA0E,UAA1E,CAAf;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAwB,+CAAxB,EAAyE;AAAE,YAAA,MAAM,EAAN;AAAF,WAAzE,EAAqF,IAArF,CACL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAC,IAAD,EAAmB;AACrB,YAAA,MAAI,CAAC,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B;AACD,WAFD,CADK,CAAP;AAKD;AAhKD;AAAA;AAAA,0CAkKkB,UAlKlB,EAkKwC,MAlKxC,EAkKmD;AAAA;;AACjD,cAAI,KAAK,qBAAL,CAA2B,QAA3B,MAAyC,KAAK,cAAL,KAAwB,IAAI,CAAC,SAAL,CAAe,MAAf,CAArE,EAA8F;AAC5F,YAAA,OAAO,CAAC,GAAR,CAAY,yBAAZ,EAAwC,KAAK,cAAL,KAAwB,IAAI,CAAC,SAAL,CAAe,MAAf,CAAhE;AACA,mBAAO,KAAK,eAAZ;AACD;;AACD,eAAK,cAAL,GAAsB,IAAI,CAAC,SAAL,CAAe,MAAf,CAAtB;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAkC,yDAAlC,EAA6F,UAA7F,EAAyG,IAAzG,CACL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAC,IAAD,EAA4B;AAC9B,YAAA,MAAI,CAAC,qBAAL,CAA2B,IAA3B,CAAgC,IAAhC;AACD,WAFD,CADK,CAAP;AAKD;AA7KD;AAAA;AAAA,iDA+KwB;AACpB,eAAK,mBAAL,GAA2B,CAAC,MAAD,EAAS,YAAT,EAAuB,YAAvB,EAAqC,aAArC,EAAoD,SAApD,EACzB,0BADyB,EACG,OADH,EACY,UADZ,EAEzB,QAFyB,EAEf,QAFe,EAEL,gBAFK,EAEa,SAFb,EAGzB,aAHyB,EAGV,gBAHU,EAGQ,QAHR,EAIzB,SAJyB,EAId,YAJc,EAIA,YAJA,EAIc,cAJd,EAKzB,UALyB,EAKb,OALa,EAKJ,YALI,EAKU,UALV,EAKsB,cALtB,CAA3B;AAMA,eAAK,iBAAL,GAAyB,CAAC,OAAD,EAAU,mBAAV,EAA+B,OAA/B,EAAwC,YAAxC,EACvB,aADuB,EACR,eADQ,EACS,MADT,EACiB,YADjB,EAC+B,mBAD/B,CAAzB;AAEA,eAAK,YAAL,GAAoB,KAAK,mBAAL,CAAyB,MAAzB,GAAkC,KAAK,iBAAL,CAAuB,MAA7E;AACA,eAAK,mBAAL,GAA2B,EAA3B;AACA,eAAK,iBAAL,GAAyB,EAAzB;;AAXoB,qDAYJ,KAAK,mBAZD;AAAA;;AAAA;AAYpB,gEAA0C;AAAA,kBAA/B,CAA+B;;AACxC,kBAAI,KAAK,mBAAL,CAAyB,cAAzB,CAAwC,CAAxC,CAAJ,EAAgD;AAC9C,oBAAI,CAAC,KAAK,mBAAL,CAAyB,CAAzB,CAAD,IAAgC,KAAK,mBAAL,CAAyB,CAAzB,MAAgC,MAApE,EAA4E;AAC1E,uBAAK,mBAAL,CAAyB,IAAzB,CAA8B,CAA9B;AACD;AACF,eAJD,MAIO;AAAE,qBAAK,mBAAL,CAAyB,IAAzB,CAA8B,CAA9B;AAAmC;AAC7C;AAlBmB;AAAA;AAAA;AAAA;AAAA;;AAAA,sDAmBJ,KAAK,iBAnBD;AAAA;;AAAA;AAmBpB,mEAAwC;AAAA,kBAA7B,EAA6B;;AACtC,kBAAI,KAAK,iBAAL,CAAuB,cAAvB,CAAsC,EAAtC,CAAJ,EAA8C;AAC5C,oBAAI,CAAC,KAAK,iBAAL,CAAuB,EAAvB,CAAD,IAA8B,KAAK,iBAAL,CAAuB,EAAvB,MAA8B,MAAhE,EAAwE;AACtE,uBAAK,iBAAL,CAAuB,IAAvB,CAA4B,EAA5B;AACD;AACF,eAJD,MAIO;AACL,qBAAK,iBAAL,CAAuB,IAAvB,CAA4B,EAA5B;AACD;AACF;AA3BmB;AAAA;AAAA;AAAA;AAAA;;AAAA,sDA4BJ,KAAK,mBA5BD;AAAA;;AAAA;AA4BpB,mEAA0C;AAAA,kBAA/B,GAA+B;;AACxC,kBAAI,KAAK,iBAAL,CAAuB,cAAvB,CAAsC,GAAtC,CAAJ,EAA8C;AAC5C,qBAAK,mBAAL,CAAyB,MAAzB,CAAgC,KAAK,mBAAL,CAAyB,OAAzB,CAAiC,GAAjC,CAAhC;AACD;AACF;AAhCmB;AAAA;AAAA;AAAA;AAAA;;AAiCpB,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,mBAAjB;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,iBAAjB;AACD;AAlNH;AAAA;AAAA,+CAmNsB;AAClB,eAAK,wBAAL,GAAgC,IAAI,CAAC,IAAL,CAAW,CAAC,KAAK,YAAL,GAAoB,KAAK,mBAAL,CAAyB,MAA7C,GAAsD,KAAK,iBAAL,CAAuB,MAA9E,IAAwF,GAAzF,GAAiG,KAAK,YAAhH,CAAhC;AACA,UAAA,YAAY,CAAC,OAAb,CAAqB,oBAArB,EAA2C,MAAM,CAAC,KAAK,wBAAN,CAAjD;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,kDAAZ;AACD;AAvNH;AAAA;AAAA,6CAwNoB;AAAA;;AAChB,cAAI,YAAY,CAAC,OAAb,CAAqB,IAArB,CAAJ,EAAgC;AAC9B,gBAAM,aAAa,GAAG,IAAI,QAAJ,EAAtB;AACA,YAAA,aAAa,CAAC,MAAd,CACE,IADF,EACQ,YAAY,CAAC,OAAb,CAAqB,IAArB,CADR;AAGA,YAAA,aAAa,CAAC,MAAd,CAAqB,WAArB,EAAkC,GAAlC;AACA,YAAA,aAAa,CAAC,MAAd,CACE,SADF,EACa,YAAY,CAAC,OAAb,CAAqB,SAArB,CADb,EAN8B,CAS9B;;AACA,mBAAO,KAAK,IAAL,CACJ,IADI,CAEH,kDAFG,EAGH,aAHG,EAKJ,IALI,CAMH,MAAA,CAAA,2CAAA,CAAA,SAAA,CAAA,CAAA,CAAQ,IAAR,CANG,EAOH,MAAA,CAAA,2CAAA,CAAA,OAAA,CAAA,CAAA,CAAM,CAAN,CAPG,EAQH,MAAA,CAAA,2CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,UAAC,CAAD,EAAM;AACf,oBAAM,IAAI,KAAJ,CAAU,oBAAoB,CAA9B,CAAN;AACD,aAFD,CARG,EAYJ,SAZI,CAaH,UAAC,IAAD,EAAc;AACZ,cAAA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,WAAjB;AACA,cAAA,MAAI,CAAC,qBAAL,GAA6B,IAAI,CAAC,WAAL,GAAmB,IAAI,CAAC,WAAxB,GAAsC,IAAnE;AACA,cAAA,MAAI,CAAC,mBAAL,GAA2B,IAAI,CAAC,OAAL,GAAe,IAAI,CAAC,OAApB,GAA8B,IAAzD;AACA,cAAA,MAAI,CAAC,iBAAL,GAAyB,IAAI,CAAC,MAAL,GAAc,IAAI,CAAC,MAAnB,GAA4B,IAArD,CAJY,CAMZ;;AACA,cAAA,MAAI,CAAC,cAAL,CAAoB,MAAI,CAAC,mBAAzB,EAA8C,MAAI,CAAC,iBAAnD;;AACA,cAAA,MAAI,CAAC,sBAAL;;AACA,cAAA,MAAI,CAAC,oBAAL;;AACA,kBAAI,IAAI,CAAC,OAAL,CAAa,KAAjB,EAAwB;AACtB,gBAAA,MAAI,CAAC,WAAL,CAAiB,cAAjB,CAAgC,IAAhC;AACD;AACF,aA1BE,EA2BH,UAAC,KAAD,EAAe;AACb,cAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACD,aA7BE,CAAP;AA+BD,WAzCD,MAyCO;AACL,YAAA,OAAO,CAAC,GAAR,CAAY,0BAAZ;AACD;AACF;AArQH;AAAA;AAAA,yDAsQgC;AAC5B,eAAK,qBAAL,CAA2B,IAA3B,CAAgC,IAAhC;AACD;AAxQH;AAAA;AAAA,0DAyQiC;AAC7B,eAAK,qBAAL,CAA2B,IAA3B,CAAgC,KAAhC;AACD;AA3QH;AAAA;AAAA,0CA4QiB;AACb,eAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB;AACD;AA9QH;AAAA;AAAA,2CA+QkB;AACd,eAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAtB;AACD;AAjRH;AAAA;AAAA,uCAmRiB,IAnRjB,EAmRmC;AAC/B,cAAI,IAAJ,EAAU;AACR,iBAAK,kBAAL,CAAwB,IAAxB,CAA6B,IAA7B;AACD;AACF,SAvRH,CAyRE;;AAzRF;AAAA;AAAA,yCA0RgD;AAAA;;AAAA,cAA9B,aAA8B,uEAAL,KAAK;;AAC5C,cAAI,KAAK,kBAAL,CAAwB,QAAxB,MAAsC,CAAC,aAA3C,EAA0D;AACxD,YAAA,OAAO,CAAC,GAAR,CAAY,qBAAZ,EAAmC,KAAK,kBAAL,CAAwB,QAAxB,EAAnC;AAEA,mBAAO,KAAK,kBAAZ;AACD;;AACD,cAAM,aAAa,GAAG,IAAI,QAAJ,EAAtB;AACA,UAAA,aAAa,CAAC,MAAd,CACE,IADF,EACQ,YAAY,CAAC,OAAb,CAAqB,IAArB,CADR;AAGA,UAAA,aAAa,CAAC,MAAd,CAAqB,WAArB,EAAkC,GAAlC;AACA,UAAA,aAAa,CAAC,MAAd,CACE,SADF,EACa,YAAY,CAAC,OAAb,CAAqB,SAArB,CADb;AAGA,UAAA,aAAa,CAAC,MAAd,CAAqB,cAArB,EAAqC,GAArC;AACA,iBAAO,KAAK,IAAL,CACJ,IADI,CAEH,kDAFG,EAGH,aAHG,EAKJ,IALI,CAMH,MAAA,CAAA,2CAAA,CAAA,SAAA,CAAA,CAAA,CAAQ,IAAR,CANG,EAOH,MAAA,CAAA,2CAAA,CAAA,OAAA,CAAA,CAAA,CAAM,CAAN,CAPG,EAQH,MAAA,CAAA,2CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,UAAC,CAAD,EAAM;AACf,YAAA,MAAI,CAAC,sBAAL,CAA4B,KAA5B,CACE,kCADF;;AAGA,kBAAM,IAAI,KAAJ,CAAU,oBAAoB,CAA9B,CAAN;AACD,WALD,CARG,EAcA,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAC,IAAD,EAAS;AACd,YAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;;AACA,YAAA,MAAI,CAAC,kBAAL,CAAwB,IAAxB,CAA6B,IAA7B;AACD,WAHE,CAdA,CAAP;AAmBD;AA5TH;AAAA;AAAA,4BAMc;AACZ,iBAAO,KAAK,UAAZ;AACA;AARF;AAAA;AAAA,4BA0He;AAAA;;AACX,cAAI,KAAK,gBAAL,CAAsB,QAAtB,EAAJ,EAAsC;AACpC,mBAAO,KAAK,UAAZ;AACD;;AACD,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAwB,mDAAxB,EAA6E,IAA7E,CACL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAC,IAAD,EAAmB;AACnB,YAAA,MAAI,CAAC,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B;AACH,WAFD,CADK,CAAP;AAID;AAlIH;;AAAA;AAAA,OAAA;;;;cAE2B,iDAAA,CAAA,YAAA;;cACO,+DAAA,CAAA,+BAAA;;cACY,gDAAA,CAAA,wBAAA;;;;AAJjC,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH9B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG8B,CAAA,EAAlB,kBAAkB,CAAlB","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { timeout, retry, catchError, tap, shareReplay } from 'rxjs/operators';\r\nimport { FindOpenHistoryProfileService } from './find-open-history-profile.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ProfileTable } from './Model/Profile';\r\nimport { RishteyCountTable } from './Model/RishteyCountTable';\r\nimport { NgxNotificationService } from 'ngx-kc-notification';\r\nimport { StateTable } from './Model/StateTable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatServiceService {\r\n\r\n  constructor(public http: HttpClient,\r\n              public itemService: FindOpenHistoryProfileService,\r\n              private ngxNotificationService: NgxNotificationService) { }\r\n\r\n get activeTab(): number {\r\n  return this.currentTab;\r\n }\r\n  authDataUpdated = new EventEmitter<boolean>();\r\n  profileItem;\r\n  contactNumber;\r\n  loginStatus;\r\n  credits;\r\n  shortList = [];\r\n  rejectList = [];\r\n  actionCount = -2;\r\n  personalProfileData: any;\r\n  familyProfileData: any;\r\n  preferenceProfileData: any;\r\n  pageThreeFilled = true;\r\n  authorized = new EventEmitter<{\r\n    name,\r\n    photo,\r\n    id,\r\n    isLead\r\n  }>();\r\n\r\n  currentTab = 0;\r\n\r\n  shouldHitSendMessages = new BehaviorSubject<boolean>(false);\r\n  shouldHitSendMessages$: Observable<boolean> = this.shouldHitSendMessages.asObservable();\r\n\r\n  opensidenav = new BehaviorSubject<boolean>(false);\r\n  opensidenav$: Observable<boolean> = this.opensidenav.asObservable();\r\n\r\n  imgSRC = new BehaviorSubject<string>(null);\r\n  imgSRC$: Observable<string> = this.imgSRC.asObservable();\r\n  formTwoCompleted = new BehaviorSubject<boolean>(false);\r\n  countOfRishtey = 0;\r\n  // for user profile\r\n  private userProfileSubject = new BehaviorSubject<ProfileTable>(null);\r\n  private userProfile$: Observable<ProfileTable> = this.userProfileSubject.asObservable().pipe(shareReplay());\r\n\r\n  // for all caste\r\n  private allCastesSubject = new BehaviorSubject<string[]>(null);\r\n  private allCastes$: Observable<string[]> = this.allCastesSubject.asObservable().pipe(shareReplay());\r\n\r\n  // get states according to country\r\n  private allStatesSubject = new BehaviorSubject<StateTable[]>(null);\r\n  private allStates$: Observable<StateTable[]> = this.allStatesSubject.asObservable().pipe(shareReplay());\r\n\r\n  // get cities on the basis of country and states\r\n  private allCitiesSubject = new BehaviorSubject<string[]>(null);\r\n  private allCities$: Observable<string[]> = this.allCitiesSubject.asObservable().pipe(shareReplay());\r\n\r\n   // get count of rishtas\r\n   private countOfRishtas: string;\r\n   private countOfRishtasSubject = new BehaviorSubject<RishteyCountTable>(null);\r\n   private countOfRishtas$: Observable<RishteyCountTable> = this.countOfRishtasSubject.asObservable().pipe(shareReplay());\r\n\r\n  selected_country: any;\r\n  selected_states = '';\r\n  selected_cities = '';\r\n  selected_states_id: string[] = [];\r\n  familyDetailsLeft: any[] = [];\r\n  personalDetailsLeft: any[] = [];\r\n  profileCompletionPercent = 0;\r\n  personalDetailsList = [];\r\n  familyDetailsList = [];\r\n  totalDetails = 0;\r\n  setProfileData(a: any, b: any) {\r\n    this.personalProfileData = a;\r\n    this.familyProfileData = b;\r\n  }\r\n  setContactNumber(contact: any) {\r\n    this.contactNumber = contact;\r\n  }\r\n  setSharedProfile(profile: any) {\r\n    this.profileItem = profile;\r\n  }\r\n  getSharedProfile() {\r\n    return this.profileItem;\r\n  }\r\n  getContactNumber() {\r\n    return this.contactNumber ? this.contactNumber : localStorage.getItem('mobile_number');\r\n  }\r\n  Analytics(type: string, category: string, action: string) {\r\n    (window as any).ga('send', 'event', category, action, {\r\n      hitCallback: () => {\r\n\r\n        console.log('Tracking ' + type + ' successful');\r\n      }\r\n\r\n    });\r\n    // gtag app + web\r\n    (window as any).gtag('event', category, {\r\n      action: action\r\n    });\r\n\r\n  }\r\n  setLoginStatus(status: boolean) {\r\n    this.loginStatus = status;\r\n  }\r\n  getLoginStatus() {\r\n    return this.loginStatus;\r\n  }\r\n\r\n  changeCurrentTab(tab: number) {\r\n    if (tab && tab > -1) {\r\n      this.currentTab = tab;\r\n    }\r\n\r\n  }\r\n\r\n  setCredits(credits: string) {\r\n    this.credits = credits;\r\n  }\r\n  getCredits() {\r\n    return this.credits;\r\n  }\r\n\r\n  get allCastes(): Observable<string[]> {\r\n    if (this.allCastesSubject.getValue()) {\r\n      return this.allCastes$;\r\n    }\r\n    return this.http.get<string[]>('https://partner.hansmatrimony.com/api/getAllCaste').pipe(\r\n      tap((data: string[]) => {\r\n          this.allCastesSubject.next(data);\r\n      }));\r\n  }\r\n\r\n  getStates(value): Observable<StateTable[]> {\r\n    if (this.allStatesSubject.getValue() || value === this.selected_country) {\r\n      console.log('cached states');\r\n      return this.allStates$;\r\n    }\r\n    this.selected_country = value;\r\n    const params = new HttpParams().set('country_id', this.selected_country ? this.selected_country.id : null);\r\n    return this.http.get<StateTable[]>('https://partner.hansmatrimony.com/api/getState', { params }).pipe(\r\n      tap((data: StateTable[]) => {\r\n        this.allStatesSubject.next(data);\r\n      })\r\n    );\r\n }\r\n\r\n getCities(countryValue, stateValue): Observable<string[]> {\r\n  if (this.allCitiesSubject.getValue() || countryValue === this.selected_country\r\n  && stateValue === this.selected_states) {\r\n    console.log('cached states');\r\n    return this.allCities$;\r\n  }\r\n  this.selected_country = countryValue;\r\n  this.selected_states = stateValue;\r\n  const params = new HttpParams().set('country_id', this.selected_country).set('state_id', stateValue);\r\n  return this.http.get<string[]>('https://partner.hansmatrimony.com/api/getCity', { params }).pipe(\r\n    tap((data: string[]) => {\r\n      this.allCitiesSubject.next(data);\r\n    })\r\n  );\r\n}\r\n\r\ngetCountOfRishtey(formValues: FormData, values: any): Observable<RishteyCountTable> {\r\n  if (this.countOfRishtasSubject.getValue() && this.countOfRishtas === JSON.stringify(values) ) {\r\n    console.log('cached count of rishtey' , this.countOfRishtas === JSON.stringify(values));\r\n    return this.countOfRishtas$;\r\n  }\r\n  this.countOfRishtas = JSON.stringify(values);\r\n  return this.http.post<RishteyCountTable>('https://partner.hansmatrimony.com/api/getCountOfRishtey', formValues).pipe(\r\n    tap((data: RishteyCountTable) => {\r\n      this.countOfRishtasSubject.next(data);\r\n    })\r\n  );\r\n}\r\n\r\n  setProfileCalculations() {\r\n    this.personalDetailsList = ['name', 'birth_date', 'birth_time', 'birth_place', 'college',\r\n      'additional_qualification', 'caste', 'religion',\r\n      'height', 'weight', 'marital_status', 'manglik',\r\n      'food_choice', 'monthly_income', 'degree',\r\n      'company', 'occupation', 'profession', 'working_city',\r\n      'locality', 'email', 'profession', 'locality', 'whats_app_no'];\r\n    this.familyDetailsList = ['about', 'occupation_mother', 'gotra', 'occupation',\r\n      'family_type', 'family_income', 'city', 'house_type', 'livingWithParents'];\r\n    this.totalDetails = this.personalDetailsList.length + this.familyDetailsList.length;\r\n    this.personalDetailsLeft = [];\r\n    this.familyDetailsLeft = [];\r\n    for (const v of this.personalDetailsList) {\r\n      if (this.personalProfileData.hasOwnProperty(v)) {\r\n        if (!this.personalProfileData[v] || this.personalProfileData[v] === 'null') {\r\n          this.personalDetailsLeft.push(v);\r\n        }\r\n      } else { this.personalDetailsLeft.push(v); }\r\n    }\r\n    for (const v of this.familyDetailsList) {\r\n      if (this.familyProfileData.hasOwnProperty(v)) {\r\n        if (!this.familyProfileData[v] || this.familyProfileData[v] === 'null') {\r\n          this.familyDetailsLeft.push(v);\r\n        }\r\n      } else {\r\n        this.familyDetailsLeft.push(v);\r\n      }\r\n    }\r\n    for (const v of this.personalDetailsLeft) {\r\n      if (this.familyProfileData.hasOwnProperty(v)) {\r\n        this.personalDetailsLeft.splice(this.personalDetailsLeft.indexOf(v));\r\n      }\r\n    }\r\n    console.log(this.personalDetailsLeft);\r\n    console.log(this.familyDetailsLeft);\r\n  }\r\n  setProfileCompletion() {\r\n    this.profileCompletionPercent = Math.ceil(((this.totalDetails - this.personalDetailsLeft.length - this.familyDetailsLeft.length) * 100) / (this.totalDetails));\r\n    localStorage.setItem('profileCompPercent', String(this.profileCompletionPercent));\r\n    console.log('profile completion percent set from chat service');\r\n  }\r\n  getUserProfileData() {\r\n    if (localStorage.getItem('id')) {\r\n      const myprofileData = new FormData();\r\n      myprofileData.append(\r\n        'id', localStorage.getItem('id')\r\n      );\r\n      myprofileData.append('contacted', '1');\r\n      myprofileData.append(\r\n        'is_lead', localStorage.getItem('is_lead')\r\n      );\r\n      // tslint:disable-next-line: max-line-length\r\n      return this.http\r\n        .post<any>(\r\n          'https://partner.hansmatrimony.com/api/getProfile',\r\n          myprofileData\r\n        )\r\n        .pipe(\r\n          timeout(7000),\r\n          retry(2),\r\n          catchError((e) => {\r\n            throw new Error('Server Timeout ' + e);\r\n          })\r\n        )\r\n        .subscribe(\r\n          (data: any) => {\r\n            console.log(data.preferences);\r\n            this.preferenceProfileData = data.preferences ? data.preferences : null;\r\n            this.personalProfileData = data.profile ? data.profile : null;\r\n            this.familyProfileData = data.family ? data.family : null;\r\n\r\n            // setting profile data in chat service for use in popups.\r\n            this.setProfileData(this.personalProfileData, this.familyProfileData);\r\n            this.setProfileCalculations();\r\n            this.setProfileCompletion();\r\n            if (data.profile.photo) {\r\n              this.itemService.setPhotoStatus(true);\r\n            }\r\n          },\r\n          (error: any) => {\r\n            console.log(error);\r\n          }\r\n        );\r\n    } else {\r\n      console.log('Couln\\'t get profiledata');\r\n    }\r\n  }\r\n  setShouldHitSendMessagesToTrue() {\r\n    this.shouldHitSendMessages.next(true);\r\n  }\r\n  setShouldHitSendMessagesToFalse() {\r\n    this.shouldHitSendMessages.next(false);\r\n  }\r\n  opensidenavTrue() {\r\n    this.opensidenav.next(true);\r\n  }\r\n  opensidenavFalse() {\r\n    this.opensidenav.next(false);\r\n  }\r\n\r\n  setUserProfile(data: ProfileTable) {\r\n    if (data) {\r\n      this.userProfileSubject.next(data);\r\n    }\r\n  }\r\n\r\n  // getProfile Observable\r\n  getUserProfile( updateProfile: boolean = false): Observable<ProfileTable> {\r\n    if (this.userProfileSubject.getValue() && !updateProfile) {\r\n      console.log('cached user profile', this.userProfileSubject.getValue());\r\n\r\n      return this.userProfileSubject;\r\n    }\r\n    const myprofileData = new FormData();\r\n    myprofileData.append(\r\n      'id', localStorage.getItem('id')\r\n    );\r\n    myprofileData.append('contacted', '1');\r\n    myprofileData.append(\r\n      'is_lead', localStorage.getItem('is_lead')\r\n    );\r\n    myprofileData.append('show_country', '1');\r\n    return this.http\r\n      .post<ProfileTable>(\r\n        'https://partner.hansmatrimony.com/api/getProfile',\r\n        myprofileData\r\n      )\r\n      .pipe(\r\n        timeout(7000),\r\n        retry(2),\r\n        catchError((e) => {\r\n          this.ngxNotificationService.error(\r\n            'Server Time Out, Try Again Later'\r\n          );\r\n          throw new Error('Server Timeout ' + e);\r\n        }\r\n        ), tap((data) => {\r\n          console.log('User Data Updated');\r\n          this.userProfileSubject.next(data);\r\n        })\r\n      );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"default~chat-chat-module~compatibility-form-compatibility-form-module-es5.js"}
import { Component, OnInit, Input } from '@angular/core';
import { NgxSpinnerService } from 'ngx-spinner';
import { Router } from '@angular/router';
import { SubscriptionserviceService } from 'src/app/subscriptionservice.service';
import { FindOpenHistoryProfileService } from 'src/app/find-open-history-profile.service';

@Component({
  selector: 'app-today-message',
  templateUrl: './today-message.component.html',
  styleUrls: ['./today-message.component.css']
})
export class TodayMessageComponent implements OnInit {
button;
@Input() messageData;
  constructor(public router: Router,
              private spinner: NgxSpinnerService,
              public itemService: FindOpenHistoryProfileService,
              public subscriptionService: SubscriptionserviceService ) { }

  ngOnInit() {
    this.setMessageText(this.messageData);
  }

     // button 1-> Meri pasand, button-2 -> plan expired, button-3 -> no credits, button-4-> No Compatibilty
    // button-4 -> show more
    setMessageText(text) {
      console.log(text);
      switch (text) {
            case 'ЁЯСЙWe have already shared 6 profiles with you.\n \n Please come back tomorrow to see more profiles':
            this.button = '1';
            break;
            case 'рд╣рдо рдЖрдкрдХреЛ рдЖрдЬ рдХреЗ рд░рд┐рд╢реНрддреЗ рджрд┐рдЦрд╛ рдЪреБрдХреЗ рд╣реИрдВ ред рдХреГрдкрдпрд╛ рдХрд▓ рдпрд╣рд╛рдБ рдкреБрдирдГ рдкрдзрд╛рд░реЗ ред рдзрдиреНрдпрд╡рд╛рджреНредЁЯЩП':
            this.button = '1';
            break;
            case 'ЁЯСЙWe have already shared 10 profiles with you.\n \n Please come back tomorrow to see more profiles':
            this.button = '1';
            break;
            case 'рд╣рдо рдЖрдкрдХреЛ рдЖрдЬ рдХреЗ рд░рд┐рд╢реНрддреЗ рджрд┐рдЦрд╛ рдЪреБрдХреЗ рд╣реИрдВ ред рдХреГрдкрдпрд╛ рдХрд▓ рдпрд╣рд╛рдБ рдкреБрдирдГ рдкрдзрд╛рд░реЗ ред рдзрдиреНрдпрд╡рд╛рджреНредЁЯЩП':
            this.button = '1';
            break;
            case 'Sorry! Your plan has expired. \n\nЁЯСЙPlease renew your plan or contact our customer care for help.':
            this.button = '2';
            break;
            case `рдорд╛реЮ рдХреАрдЬрд┐рдпреЗ! рдЖрдкрдХреЗ рдкреНрд░реЛрдлрд╛рдЗрд▓ рдХреА рд╕рдордп рд╕реАрдорд╛ рд╕рдорд╛рдкреНрдд рд╣реЛ рдЧрдпреА рд╣реИред \n\nЁЯСЙрд╕реБрд╡рд┐рдзрд╛рдПрдБ рдЬрд╛рд░реА рд░рдЦрдиреЗ рдХреЗ рд▓рд┐рдП рдХреГрдкрдпрд╛ рдкреБрдирдГ \'рдкреНрд▓рд╛рди рдЦрд░реАрджреЗрдВ\'
             рдпрд╛ рд╣рдорд╛рд░реЗ рдХрд╕реНрдЯрдорд░ рдХреЗрдпрд░ рдкрд░ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред`:
            this.button = '2';
            break;
            case 'ЁЯСЙYou have 0 contact numbers left. To contact this match, \'Buy A Plan\'':
              this.button = '3';
              break;
              case 'ЁЯСЙрдЖрдкрдХреЗ рдкрд╛рд╕ рд╢реЗрд╖ рдХреЙрдиреНрдЯреИрдХреНрдЯ рдирдВрдмрд░ 0 рд╣реИрдВред рдЗрдиреНрд╣реЗрдВ рдХреЙрдиреНрдЯреИрдХреНрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП \'рдкреНрд▓рд╛рди рдЦрд░реАрджреЗрдВ\'':
              this.button = '3';
              break;
              case ' We are looking for your perfect matches. Come back after 2 days to see more profiles.':
              this.button = '4';
              break;
              case 'рд╣рдо рдЖрдкрдХреЗ рд▓рд┐рдП рдЙрддреНрддрдо рд░рд┐рд╢реНрддреЗ рддрд▓рд╛рд╢ рд░рд╣реЗрдВ рд╣реИрдВред рдХреГрдкрдпрд╛ 2 рджрд┐рдиреЛрдВ рдмрд╛рдж рдкреБрдирдГ рдпрд╣рд╛рдБ рдкрдзрд╛рд░реЗрдВред':
              this.button = '4';
              break;
              case 'I am sorry I dont understand.\n \nЁЯСЙ Please buy a plan or click to see more profiles.':
                this.button = '5';
                break;
                case 'рдорд╛реЮ рдХреАрдЬрд┐рдпреЗред рдореБрдЭреЗ рд╕рдордЭ рдирд╣реАрдВ рдЖрдпрд╛ред \n\nЁЯСЙрдХреГрдкрдпрд╛ \'рдкреНрд▓рд╛рди рдЦрд░реАрджреЗрдВ\' рдпрд╛ рдЕрдЧрд▓рд╛ рд░рд┐рд╢реНрддрд╛ рджреЗрдЦреЗрдВред':
                this.button = '5';
                break;
        default:
          break;
      }
      console.log(this.button);
      this.spinner.hide();
    }
    callHans() {
      window.open('tel:9697989697');
    }
    showPlan() {
    this.router.navigateByUrl('subscription');
    }
    showLikedProfile() {
      this.itemService.changeTab(2);
    }
    showProfilesLikedMe() {
      this.itemService.changeTab(3);
    }
    goToVip() {
      this.itemService.changeTab(4);
    }
    buyPlan(plan: any) {
      this.subscriptionService.payNowT(plan, 'live', 0, '', '', localStorage.getItem('mobile_number'));
    }

}
